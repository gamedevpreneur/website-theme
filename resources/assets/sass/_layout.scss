@mixin media-up($size) {
    $breakpoints: (
        "md": 768px,
        "lg": 1200px,
    );

    @media(min-width: map-get($breakpoints, $size)) {
        @content;
    }
}

@mixin overlay() {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
}

@mixin flex-center() {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin flex-vertical-center() {
    display: flex;
    align-items: center;
}

@mixin flex-hr() {
    // Check why it is needed in https://stackoverflow.com/questions/34365271/hr-inside-container-with-display-flex-become-corrupted
    hr {
        width: 100%;
    }
}

@function get-space($size) {
    $spacer: 1rem;
    $spacers: (
        0: 0,
        1: ($spacer * .25),
        2: ($spacer * .5),
        3: $spacer,
        4: ($spacer * 1.5),
        5: ($spacer * 3)
    );
    
    @return map-get($spacers, $size);
}

@mixin mx($size, $bp: "none") {
    @if $bp == "none" {
        margin-left: get-space($size);
        margin-right: get-space($size);
    } @else {
        @include media-up($bp) {
            margin-left: get-space($size);
            margin-right: get-space($size);
        }
    }
}

@mixin my($size, $bp: "none") {
    @if $bp == "none" {
        margin-top: get-space($size);
        margin-bottom: get-space($size);
    } @else {
        @include media-up($bp) {
            margin-top: get-space($size);
            margin-bottom: get-space($size);
        }
    }
}

@mixin m($size, $bp: "none") {
    @include mx($size, $bp);
    @include my($size, $bp);
}

@mixin px($size, $bp: "none") {
    @if $bp == "none" {
        padding-left: get-space($size);
        padding-right: get-space($size);
    } @else {
        @include media-up($bp) {
            padding-left: get-space($size);
            padding-right: get-space($size);
        }
    }
}

@mixin py($size, $bp: "none") {
    @if $bp == "none" {
        padding-left: get-space($size);
        padding-right: get-space($size);
    } @else {
        @include media-up($bp) {
            padding-left: get-space($size);
            padding-right: get-space($size);
        }
    }
}

@mixin p($size, $bp: "none") {
    @include px($size, $bp);
    @include py($size, $bp);
}

@mixin container() {
    width: 100%;
    margin-right: auto;
    margin-left: auto;

    @include media-up("lg") {
        width: 1200px;
        padding-right: 15px;
        padding-left: 15px;
    }
}

%container {
    @include container();
}

%container-full {
    @include container();

    @include media-up("lg") {
        width: 100%;
    }
}

$content-width: 760px;
$content-width-wide: 950px;

@function font-size($size) {
    $sizes: (
        "h1": 2.5rem,
        "h2": 2rem,
        "h3": 1.75rem,
        "h4": 1.5rem,
        "h5": 1.25rem,
        "h6": 1rem,
        "d1": 6rem,
        "d2": 5.5rem,
        "d3": 4.5rem,
        "d4": 3.5rem,
    );

    @return map-get($sizes, $size);
}
